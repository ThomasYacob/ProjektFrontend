#version: '3'
#
#services:
#  db:
#    image: 'mysql/mysql-server:5.7'
#    ports:
#      - "3306:3306"
#    environment:
#      - MYSQL_ROOT_PASSWORD=Root123.
#      - MYSQL_DATABASE=CRUD
#      - MYSQL_USER=root
#      - MYSQL_PASSWORD=Root123.
#      - MYSQL_ROOT_HOST=%
#    volumes:
#      - ./my-datavolume:/var/lib/mysql
#    healthcheck:
#      test: ["CMD","mysqladmin","ping","-h","localhost"]
#      timeout: 20s
#      retries: 10
#    restart: always
#  backendserver:
#    build: ./crud-backend/
#    ports:
#      - "8080"
#    links:
#      - "db"
#    depends_on:
#      - "db"
#    restart: always
#  frontend:
#    build: ./CRUD/
#    links:
#      - "backendserver"
#    depends_on:
#      - "backendserver"
#    ports:
#      - "80:80"
#

# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: /Users/thomas/Documents/ProjektBackend # Use an image built from the specified dockerfile in the `ProjektBackend` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/giesecke&devrient?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Root123.
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service
  app-client:
    build:
      context: /Users/thomas/Documents/ProjektFrontend # Use an image built from the specified dockerfile in the `ProjektFrontend` directory.
      dockerfile: Dockerfile
      args:
        API_BASE_URL: http://127.0.0.1:8080/
    ports:
      - "8081:80" # Map the exposed port 80 on the container to port 8081 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend

  # Database Service (Mysql)
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: Giesecke&Devrient
      MYSQL_USER: root
      MYSQL_PASSWORD: Root123.
      MYSQL_ROOT_PASSWORD: root.
    networks:
      - backend

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend: